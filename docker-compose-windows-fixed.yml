services:
  mc:
    image: itzg/minecraft-server
    tty: true
    ports:
      - "25565:25565"  # Minecraft server port
      - "25575:25575"  # RCON port
    environment:
      EULA: "TRUE"
      VERSION: 1.21
      TYPE: PAPER
      MODE: creative
      ONLINE_MODE: false
      ENFORCE_SECURE_PROFILE: false
      RCON_PASSWORD: change-me
      BROADCAST_RCON_TO_OPS: true
      # Absolutely no hostile mobs
      DIFFICULTY: peaceful
      SPAWN_MONSTERS: false
      SPAWN_ANIMALS: false  
      SPAWN_NPCS: false
      # MODRINTH_PROJECTS: skinsrestorer,luckperms
      # LEVEL_TYPE: "minecraft:single_biome_surface"
      # GENERATOR_SETTINGS: '{"biome":"minecraft:plains"}'
      LEVEL: superflat-peaceful
      LEVEL_TYPE: minecraft:flat
      GENERATOR_SETTINGS: >-
        {
          "layers": [
            { "block": "minecraft:bedrock", "height": 1 },
            { "block": "minecraft:stone",   "height": 124 },
            { "block": "minecraft:dirt",    "height": 2 },
            { "block": "minecraft:grass_block", "height": 1 }
          ],
          "biome": "minecraft:plains"
        }
    volumes:
      # attach the relative directory 'data' to the container's /data path
      - ./data:/data

  sender_alpha:
    build:
      context: .
      dockerfile: Dockerfile.windows
    image: nyu-mc-data-enhanced:latest
    depends_on:
      - mc
      - receiver_alpha
    volumes:
      # attach the relative directory 'data' to the container's /data path
      - ./output:/output
    environment:
      BOT_NAME: Alpha
      OTHER_BOT_NAME: Bravo
      RECEIVER_HOST: receiver_alpha
      RECEIVER_PORT: 8090
      COORD_PORT: 8100
      OTHER_COORD_HOST: sender_bravo
      OTHER_COORD_PORT: 8100
      BOT_RNG_SEED: "12345"
      EPISODES_NUM: 25
      RUN_ID: 1
      MC_HOST: mc
      MC_PORT: 25565
      RCON_HOST: mc
      RCON_PORT: 25575
      RCON_PASSWORD: research
      COLOR: red
      BOOTSTRAP_WAIT_TIME: 30
      CAMERA_READY_RETRIES: 30
      CAMERA_READY_CHECK_INTERVAL: 2000
    command: ./entrypoint_senders.sh

  sender_bravo:
    image: nyu-mc-data-enhanced:latest
    depends_on:
      - mc
      - receiver_bravo
      - sender_alpha
    volumes:
      # attach the relative directory 'data' to the container's /data path
      - ./output:/output
    environment:
      BOT_NAME: Bravo
      OTHER_BOT_NAME: Alpha
      RECEIVER_HOST: receiver_bravo
      RECEIVER_PORT: 8090
      COORD_PORT: 8100
      OTHER_COORD_HOST: sender_alpha
      OTHER_COORD_PORT: 8100
      BOT_RNG_SEED: "12345"
      EPISODES_NUM: 25
      RUN_ID: 1
      MC_HOST: mc
      MC_PORT: 25565
      RCON_HOST: mc
      RCON_PORT: 25575
      RCON_PASSWORD: research
      COLOR: blue
      BOOTSTRAP_WAIT_TIME: 30
      CAMERA_READY_RETRIES: 30
      CAMERA_READY_CHECK_INTERVAL: 2000
    command: ./entrypoint_senders.sh

  receiver_alpha:
    image: nyu-mc-data-enhanced:latest
    environment:
      PORT: 8090
      NAME: Alpha
      INSTANCE_ID: 0
      EPISODE_START_ID: 0
    tty: true
    volumes:
      # attach the relative directory 'data' to the container's /data path
      - ./output:/output
    command: ./entrypoint_receiver.sh

  receiver_bravo:
    image: nyu-mc-data-enhanced:latest
    environment:
      PORT: 8090
      NAME: Bravo
      INSTANCE_ID: 0
      EPISODE_START_ID: 0
    tty: true
    volumes:
      # attach the relative directory 'data' to the container's /data path
      - ./output:/output
    command: ./entrypoint_receiver.sh

  script:
    image: nyu-mc-data-enhanced:latest
    depends_on:
      - sender_alpha
      - sender_bravo
    tty: true
    volumes:
      # attach the relative directory 'data' to the container's /data path
      - ./output:/output
    command: python output-post-processing-utils/batch_process_all.py --output-dir /output
